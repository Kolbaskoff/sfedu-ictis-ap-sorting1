name: CMake

on:
  push:
    branches:
      - '*'
    paths:
      - 'main.cpp'
env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure CMake
        # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
        # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build
        # Build your program with the given configuration
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Execute
        # Execute
        run: ${{github.workspace}}/build/sfedu_ictis_ap_sorting

      - name: Draw Charts
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'
      - run: pip install numpy matplotlib; python draw.py

      - name: Archive Data
        uses: actions/upload-artifact@v2
        with:
          name: execution-results
          path: |
            ./*.csv
            ./*.png

      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v2
